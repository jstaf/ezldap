#!/usr/bin/env python3

import os
import shutil
import argparse
import pkg_resources

import yaml
import ezldap

def main():
    parser = argparse.ArgumentParser(description=
        'Create a set of configs for ezldap scripts under ~/.ezldap/.'
        'To delete your ezldap config, just delete the ~/.ezldap folder.')
    parser.add_argument('-f', '--force', default=False, const=True, action='store_const',
        help='Whether to force overwriting existing config files in ~/.ezldap '
        '(namely LDIF templates).')
    argv = parser.parse_args()

    if os.path.exists(os.path.expanduser('~/.ezldap/config.yml')):
        conf = ezldap.config()
    else:
        conf = ezldap.guess_config()
    
    prompts = {
        'host': 'LDAP host',
        'binddn': 'Bind DN',
        'bindpw': 'Bind password (leave blank to prompt for password)',
        'peopledn': 'User base dn',
        'groupdn': 'Group base dn',
        'homedir': 'Default home directory for new users'
    }


    for k, v in prompts.items():
        conf[k] = interactive_conf(v, conf[k])

    os.makedirs(os.path.expanduser('~/.ezldap'), mode=0o700, exist_ok=True)
    yaml.dump(conf, 
        stream=open(os.path.expanduser('~/.ezldap/config.yml'), 'w'),
        default_flow_style=False)

    for template in pkg_resources.resource_listdir('ezldap', 'templates'):
        if not os.path.exists(os.path.expanduser('~/.ezldap/' + template)):
            content = pkg_resources.resource_string('ezldap', 'templates/' + template).decode()
            with open(os.path.expanduser('~/.ezldap/' + template), 'w') as fout:
                fout.write(content)
            

def interactive_conf(prompt, default=None):
    '''
    Prompt the user for a config value, press ENTER for default val.
    '''
    if default is None:
        val = input('{}: '.format(prompt))
    else:
        val = input('{} [{}]: '.format(prompt, default))
    
    if val == '':
        return default
    else:
        return val


if __name__ == '__main__':
    main()
