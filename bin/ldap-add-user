#!/usr/bin/env python3

import argparse
import grp
import sys
import ezldap

def main():
    parser = argparse.ArgumentParser(description=
            "Creates an LDAP user and add to a group. " 
            "Creates a same-named LDAP group as well if no group specified. "
            "Prints the randomly generated password to stdout.")
    parser.add_argument('username', nargs=1, type=str,
            help="Username to create.")
    parser.add_argument('groupname', nargs='?', type=str, default=None,
            help="Groupname to add user to. If omitted, creates same-named LDAP group. "
                "If the group is a local group, a new LDAP group will not be created "
                "and an ldap add group operation will not be perfomed.")
    argv = parser.parse_args()
    user = argv.username[0]
    group = argv.groupname

    with ezldap.auto_bind() as con:
        query = con.search_safe(filter='cn={}'.format(group))
        group_is_local = len(query) == 0

        passwd = ezldap.random_passwd()
        print('Password for {} is: {}'.format(user, passwd))

        if group_is_local:
            try:
                gr_gid = grp.getgrnam(group).gr_gid
            except KeyError:
                sys.exit('Group does not exist.')

            print('Creating user {}, member of local group {}...'.format(user, group))
            con.add_user(user, None, passwd, gid=gr_gid)
        else:
            if group is None:
                # create a new group
                group = user
                print('Creating LDAP group {}...'.format(group))
                con.add_group(group)
           
            print('Creating user {}, member of LDAP group {}'.format(user, group))
            con.add_user(user, group, passwd)
            con.add_user_to_group(user, group)

if __name__ == '__main__':
    main()
